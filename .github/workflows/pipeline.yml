name: PIPELINE - Java CI with Maven and SonarCloud Analysis

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    types: [opened, synchronize, reopened]

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml -Dspring.profiles.active=test
      - uses: actions/upload-artifact@v2
        with:
          name: backend-jar
          path: ./target/backend-0.0.1-SNAPSHOT.jar

  test-and-style:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run tests
        run: mvn test --file pom.xml -Dspring.profiles.active=test
      - name: Lint with Checkstyle
        run: mvn checkstyle:checkstyle

  docker-build-and-push:
    needs: test-and-style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download JAR artifact
        uses: actions/download-artifact@v2
        with:
          name: backend-jar
          path: ./target
      - name: Build Docker image
        run: docker build -t ghcr.io/alexandrelefay/arosaje-mspr/arosaje-backend:latest .
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Docker image to GitHub Packages
        run: docker push ghcr.io/alexandrelefay/arosaje-mspr/arosaje-backend:latest

  deploy-to-render:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Trigger image to render.com
        run: curl https://api.render.com/deploy/srv-cncb5eacn0vc73f0abf0?key=03P-7j6L7rs

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven and generate coverage report
        run: mvn -B clean verify --file pom.xml -Dspring.profiles.active=test
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=AlexandreLefay_arosaje-backend
            -Dsonar.organization=alexandrelefay
            -Dsonar.java.binaries=target/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-to-clever-cloud:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download JAR artifact
        uses: actions/download-artifact@v2
        with:
          name: backend-jar
          path: ./target
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan push-n3-par-clevercloud-customers.services.clever-cloud.com >> ~/.ssh/known_hosts
      - name: Install Clever Tools
        run: npm install -g clever-tools
      - name: Clever Deploy
        run: clever deploy
        env:
          CLEVER_TOKEN: ${{ secrets.CLEVER_TOKEN }}
          CLEVER_SECRET: ${{ secrets.CLEVER_SECRET }}
