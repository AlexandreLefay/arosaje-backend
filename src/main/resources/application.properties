## Database configuration
spring.datasource.url=jdbc:mariadb://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:mspr1}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
## To fix cors issue on production
AROSAJE_WEB_URL=${AROSAJE_WEB_URL}
## The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.show-sql=true

## Hibernate properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
spring.jpa.hibernate.ddl-auto=update

## Init swagge, swagger is a tool to quickly generate API documentation
springdoc.swagger-ui.path=/swagger-ui.html
server.port=9000
logging.level.org.springframework.security=DEBUG
logging.level.root=INFO

## File upload
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=2MB
spring.servlet.multipart.max-request-size=10MB

# Configuration de HikariCP
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=10000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000

# Permet de

# Properties for the Auht0 authentication
spring.security.oauth2.client.provider.auth0.issuer-uri=https://dev-xg6xqpzynp8fjyur.us.auth0.com/
spring.security.oauth2.client.registration.auth0.client-id=nbTPoue3oDpLGibtuZcK71CPXfG3VZzG
spring.security.oauth2.client.registration.auth0.client-secret=EKQjesxIIOgCJm5x53qeNgIPBCJKDMlw9Zg7PyglmJgdPil4buj05-dNJCPm6JLs
#spring.security.oauth2.client.registration.auth0.scope=openid profile email
spring.security.oauth2.client.registration.auth0.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-xg6xqpzynp8fjyur.us.auth0.com/
